/**
 * Create Sample Blog Post Script
 * Creates a sample blog post for testing the frontend
 */

require('@dotenvx/dotenvx').config({ path: '../.env.development' });
const knex = require('./config/database');

async function createSamplePost() {
  try {
    console.log('üîÑ Creating sample blog post...');

    // Get a seller to use as author (first seller in the database)
    const seller = await knex('sellers').select('id', 'username', 'first_name', 'last_name').first();

    if (!seller) {
      console.error('‚ùå No sellers found in database. Please create a seller first.');
      return;
    }

    // Get a category to use (first category)
    const category = await knex('blog_categories').select('id', 'name').first();

    if (!category) {
      console.error('‚ùå No blog categories found. Please run migrations first.');
      return;
    }

    // Check if post already exists
    const existingPost = await knex('blog_posts').where('slug', 'used-car-buying-guide-2025').first();

    if (existingPost) {
      console.log('‚úÖ Sample blog post already exists!');
      console.log('üìã Post details:');
      console.log(`   - ID: ${existingPost.id}`);
      console.log(`   - Title: ${existingPost.title}`);
      console.log(`   - Status: ${existingPost.status}`);
      console.log(`   - Featured: ${existingPost.is_featured ? 'Yes' : 'No'}`);
      return;
    }

    // Create a sample blog post
    const samplePost = {
      title: 'ÿØŸÑŸäŸÑ ÿ¥ÿ±ÿßÿ° ÿ≥Ÿäÿßÿ±ÿ© ŸÖÿ≥ÿ™ÿπŸÖŸÑÿ©: ŸÜÿµÿßÿ¶ÿ≠ ŸÖŸáŸÖÿ© ŸÑÿßÿÆÿ™Ÿäÿßÿ± ÿßŸÑÿ≥Ÿäÿßÿ±ÿ© ÿßŸÑŸÖŸÜÿßÿ≥ÿ®ÿ©',
      slug: 'used-car-buying-guide-2025',
      content: `
# ÿØŸÑŸäŸÑ ÿ¥ÿ±ÿßÿ° ÿ≥Ÿäÿßÿ±ÿ© ŸÖÿ≥ÿ™ÿπŸÖŸÑÿ©: ŸÜÿµÿßÿ¶ÿ≠ ŸÖŸáŸÖÿ© ŸÑÿßÿÆÿ™Ÿäÿßÿ± ÿßŸÑÿ≥Ÿäÿßÿ±ÿ© ÿßŸÑŸÖŸÜÿßÿ≥ÿ®ÿ©

ÿ¥ÿ±ÿßÿ° ÿ≥Ÿäÿßÿ±ÿ© ŸÖÿ≥ÿ™ÿπŸÖŸÑÿ© ŸäŸÖŸÉŸÜ ÿ£ŸÜ ŸäŸÉŸàŸÜ ÿÆŸäÿßÿ±ÿßŸã ŸÖŸÖÿ™ÿßÿ≤ÿßŸã ŸÑÿ™ŸàŸÅŸäÿ± ÿßŸÑŸÖÿßŸÑ ŸàÿßŸÑÿ≠ÿµŸàŸÑ ÿπŸÑŸâ ÿ≥Ÿäÿßÿ±ÿ© ÿ¨ŸäÿØÿ©. ŸàŸÑŸÉŸÜ Ÿäÿ™ÿ∑ŸÑÿ® ÿßŸÑÿ£ŸÖÿ± ÿ®ÿπÿ∂ ÿßŸÑÿ≠ÿ∞ÿ± ŸàÿßŸÑÿ™ÿÆÿ∑Ÿäÿ∑ ŸÑÿ∂ŸÖÿßŸÜ ÿßÿ™ÿÆÿßÿ∞ ÿßŸÑŸÇÿ±ÿßÿ± ÿßŸÑÿµÿ≠Ÿäÿ≠.

## ÿßŸÑŸÜÿµÿßÿ¶ÿ≠ ÿßŸÑÿ£ÿ≥ÿßÿ≥Ÿäÿ© ŸÇÿ®ŸÑ ÿßŸÑÿ¥ÿ±ÿßÿ°

### 1. ÿ™ÿ≠ÿØŸäÿØ ÿßŸÑŸÖŸäÿ≤ÿßŸÜŸäÿ©
- ÿ≠ÿØÿØ ÿßŸÑŸÖÿ®ŸÑÿ∫ ÿßŸÑÿ∞Ÿä ŸäŸÖŸÉŸÜŸÉ ÿØŸÅÿπŸá
- ÿßÿ≠ÿ≥ÿ® ÿßŸÑÿ™ŸÉÿßŸÑŸäŸÅ ÿßŸÑÿ•ÿ∂ÿßŸÅŸäÿ© ŸÖÿ´ŸÑ ÿßŸÑÿ™ÿ£ŸÖŸäŸÜ ŸàÿßŸÑÿµŸäÿßŸÜÿ©
- ÿßÿ™ÿ±ŸÉ ŸÖÿ®ŸÑÿ∫ÿßŸã ÿßÿ≠ÿ™Ÿäÿßÿ∑ŸäÿßŸã ŸÑŸÑÿ•ÿµŸÑÿßÿ≠ÿßÿ™ ÿßŸÑŸÖÿ≠ÿ™ŸÖŸÑÿ©

### 2. ÿßŸÑÿ®ÿ≠ÿ´ ÿπŸÜ ÿßŸÑÿ≥Ÿäÿßÿ±ÿ© ÿßŸÑŸÖŸÜÿßÿ≥ÿ®ÿ©
- ÿßÿ®ÿ≠ÿ´ ÿπŸÜ ŸÖŸàÿØŸäŸÑÿßÿ™ ŸÖÿπÿ±ŸàŸÅÿ© ÿ®ÿßŸÑŸÖŸàÿ´ŸàŸÇŸäÿ©
- ÿ±ÿßÿ¨ÿπ ÿ™ŸÇŸäŸäŸÖÿßÿ™ ÿßŸÑŸÖÿßŸÑŸÉŸäŸÜ ÿßŸÑÿ≥ÿßÿ®ŸÇŸäŸÜ
- ŸÇÿßÿ±ŸÜ ÿßŸÑÿ£ÿ≥ÿπÿßÿ± ŸÅŸä ÿßŸÑÿ≥ŸàŸÇ ÿßŸÑŸÖÿ≠ŸÑŸä

### 3. ŸÅÿ≠ÿµ ÿßŸÑÿ≥Ÿäÿßÿ±ÿ©
- ÿßŸÅÿ≠ÿµ ÿßŸÑŸÖÿ≠ÿ±ŸÉ ŸàÿßŸÑŸÖŸÉÿßÿ®ÿ≠
- ÿ™ÿ£ŸÉÿØ ŸÖŸÜ ÿ≠ÿßŸÑÿ© ÿßŸÑÿ•ÿ∑ÿßÿ±ÿßÿ™
- ÿßÿ∑ŸÑÿ® ÿ™ŸÇÿ±Ÿäÿ± ÿßŸÑŸÅÿ≠ÿµ ÿßŸÑŸÅŸÜŸä

## ÿßŸÑŸÖÿ±ÿßÿ≠ŸÑ ÿßŸÑŸÜŸáÿßÿ¶Ÿäÿ© ŸÑŸÑÿ¥ÿ±ÿßÿ°

### ÿßŸÑÿ™ÿ£ŸÉÿØ ŸÖŸÜ ÿßŸÑÿ£Ÿàÿ±ÿßŸÇ
- ÿ™ÿ£ŸÉÿØ ŸÖŸÜ ÿµÿ≠ÿ© Ÿàÿ´ÿßÿ¶ŸÇ ÿßŸÑŸÖŸÑŸÉŸäÿ©
- ÿ±ÿßÿ¨ÿπ ÿ™ÿßÿ±ŸäÿÆ ÿßŸÑÿµŸäÿßŸÜÿ©
- ÿ™ÿ≠ŸÇŸÇ ŸÖŸÜ ÿπÿØŸÖ Ÿàÿ¨ŸàÿØ ŸÖÿÆÿßŸÑŸÅÿßÿ™ ŸÖÿ±Ÿàÿ±Ÿäÿ©

### ÿßŸÑÿ™ŸÅÿßŸàÿ∂ ÿπŸÑŸâ ÿßŸÑÿ≥ÿπÿ±
- ÿßÿ®ÿ≠ÿ´ ÿπŸÜ ÿ£ÿ≥ÿπÿßÿ± ŸÖŸÖÿßÿ´ŸÑÿ© ŸÅŸä ÿßŸÑÿ≥ŸàŸÇ
- ŸÑÿß ÿ™ÿ™ÿ±ÿØÿØ ŸÅŸä ÿßŸÑÿ™ŸÅÿßŸàÿ∂
- ŸÅŸÉÿ± ŸÅŸä ÿßŸÑÿ™ŸÉÿßŸÑŸäŸÅ ÿßŸÑÿ•ÿ∂ÿßŸÅŸäÿ©

## ÿßŸÑÿÆŸÑÿßÿµÿ©

ÿ¥ÿ±ÿßÿ° ÿ≥Ÿäÿßÿ±ÿ© ŸÖÿ≥ÿ™ÿπŸÖŸÑÿ© Ÿäÿ™ÿ∑ŸÑÿ® ÿµÿ®ÿ±ÿßŸã Ÿàÿ®ÿ≠ÿ´ÿßŸã ÿ¨ŸäÿØÿßŸã. ÿßÿ™ÿ®ÿπ Ÿáÿ∞Ÿá ÿßŸÑŸÜÿµÿßÿ¶ÿ≠ ŸÑÿ∂ŸÖÿßŸÜ ÿßÿ™ÿÆÿßÿ∞ ÿßŸÑŸÇÿ±ÿßÿ± ÿßŸÑÿ£ŸÖÿ´ŸÑ ŸàÿßŸÑÿ≠ÿµŸàŸÑ ÿπŸÑŸâ ÿ≥Ÿäÿßÿ±ÿ© ÿ™ÿÆÿØŸÖŸÉ ŸÑÿ≥ŸÜŸàÿßÿ™ ŸÇÿßÿØŸÖÿ©.

ÿ™ÿ∞ŸÉÿ± ÿ£ŸÜ ÿßŸÑÿßÿ≥ÿ™ÿπÿßŸÜÿ© ÿ®ÿÆÿ®Ÿäÿ± ÿ£Ÿà ŸÖŸäŸÉÿßŸÜŸäŸÉŸä ŸÖŸàÿ´ŸàŸÇ ŸäŸÖŸÉŸÜ ÿ£ŸÜ ŸäŸàŸÅÿ± ÿπŸÑŸäŸÉ ÿßŸÑŸÉÿ´Ÿäÿ± ŸÖŸÜ ÿßŸÑŸÖÿ¥ÿßŸÉŸÑ ŸàÿßŸÑÿ™ŸÉÿßŸÑŸäŸÅ ÿßŸÑŸÖÿ≥ÿ™ŸÇÿ®ŸÑŸäÿ©.
      `,
      excerpt: 'ÿØŸÑŸäŸÑ ÿ¥ÿßŸÖŸÑ ŸÑÿ¥ÿ±ÿßÿ° ÿ≥Ÿäÿßÿ±ÿ© ŸÖÿ≥ÿ™ÿπŸÖŸÑÿ© Ÿäÿ™ÿ∂ŸÖŸÜ ÿ£ŸáŸÖ ÿßŸÑŸÜÿµÿßÿ¶ÿ≠ ŸàÿßŸÑÿÆÿ∑Ÿàÿßÿ™ ÿßŸÑŸÑÿßÿ≤ŸÖÿ© ŸÑÿßÿ™ÿÆÿßÿ∞ ÿßŸÑŸÇÿ±ÿßÿ± ÿßŸÑÿµÿ≠Ÿäÿ≠ Ÿàÿ™ÿ¨ŸÜÿ® ÿßŸÑŸÖÿ¥ÿßŸÉŸÑ ÿßŸÑÿ¥ÿßÿ¶ÿπÿ©.',
      featured_image: 'https://images.unsplash.com/photo-1449965408869-eaa3f722e40d?w=800&q=80',
      author_id: seller.id,
      category_id: category.id,
      status: 'published',
      is_featured: true,
      meta_title: 'ÿØŸÑŸäŸÑ ÿ¥ÿ±ÿßÿ° ÿ≥Ÿäÿßÿ±ÿ© ŸÖÿ≥ÿ™ÿπŸÖŸÑÿ© - ŸÜÿµÿßÿ¶ÿ≠ ŸÖŸáŸÖÿ© 2025',
      meta_description: 'ÿ™ÿπŸÑŸÖ ŸÉŸäŸÅŸäÿ© ÿ¥ÿ±ÿßÿ° ÿ≥Ÿäÿßÿ±ÿ© ŸÖÿ≥ÿ™ÿπŸÖŸÑÿ© ÿ®ÿ£ŸÅÿ∂ŸÑ ÿßŸÑÿ∑ÿ±ŸÇ. ÿØŸÑŸäŸÑ ÿ¥ÿßŸÖŸÑ Ÿäÿ™ÿ∂ŸÖŸÜ ŸÜÿµÿßÿ¶ÿ≠ ÿßŸÑÿÆÿ®ÿ±ÿßÿ° ŸÑÿßÿÆÿ™Ÿäÿßÿ± ÿßŸÑÿ≥Ÿäÿßÿ±ÿ© ÿßŸÑŸÖŸÜÿßÿ≥ÿ®ÿ© Ÿàÿ™ÿ¨ŸÜÿ® ÿßŸÑŸÖÿ¥ÿßŸÉŸÑ.',
      reading_time: 5,
      views_count: 127,
      likes_count: 23,
      comments_count: 0,
      published_at: knex.fn.now(),

      // Car-specific fields
      car_make: 'Toyota',
      car_model: 'Camry',
      car_year: 2020,
      price_range_min: 15000,
      price_range_max: 25000,
      price_currency: 'USD',
      market_trend: 'stable',
      source: 'Cars Bids Team',
      rating: 4.5,
      pros: JSON.stringify([
        'ŸÖŸàÿ´ŸàŸÇŸäÿ© ÿπÿßŸÑŸäÿ©',
        'ÿßÿ≥ÿ™ŸáŸÑÿßŸÉ ŸàŸÇŸàÿØ ÿßŸÇÿ™ÿµÿßÿØŸä',
        'ŸÇÿ∑ÿπ ÿ∫Ÿäÿßÿ± ŸÖÿ™ŸàŸÅÿ±ÿ©',
        'ÿ≥ŸáŸàŸÑÿ© ÿßŸÑÿµŸäÿßŸÜÿ©',
        'ŸÇŸäŸÖÿ© ÿ•ÿπÿßÿØÿ© ÿßŸÑÿ®Ÿäÿπ ÿ¨ŸäÿØÿ©'
      ]),
      cons: JSON.stringify([
        'ÿ≥ÿπÿ± ŸÖÿ±ÿ™ŸÅÿπ ŸÜÿ≥ÿ®ŸäÿßŸã',
        'ÿ™ÿµŸÖŸäŸÖ ÿ™ŸÇŸÑŸäÿØŸä',
        'ŸÖÿ≥ÿßÿ≠ÿ© ÿµŸÜÿØŸàŸÇ ŸÖÿ≠ÿØŸàÿØÿ©'
      ]),
      specifications: JSON.stringify({
        engine: '2.5L 4-Cylinder',
        transmission: 'CVT',
        fuel_economy: '8.5L/100km',
        seating: '5 passengers',
        safety_rating: '5 stars'
      })
    };

    // Insert the blog post
    const [insertedPost] = await knex('blog_posts').insert(samplePost).returning('id');
    const postId = insertedPost.id || insertedPost;

    console.log('‚úÖ Sample blog post created successfully!');
    console.log('üìã Post details:');
    console.log(`   - ID: ${postId}`);
    console.log(`   - Title: ${samplePost.title}`);
    console.log(`   - Author: ${seller.first_name} ${seller.last_name} (${seller.username})`);
    console.log(`   - Category: ${category.name}`);
    console.log(`   - Status: ${samplePost.status}`);
    console.log(`   - Featured: ${samplePost.is_featured ? 'Yes' : 'No'}`);

    // Add some tags to the post
    const tags = await knex('blog_tags').select('id', 'name').whereIn('slug', ['used-cars', 'tips', 'reviews']).limit(3);

    if (tags.length > 0) {
      const tagRelations = tags.map(tag => ({
        post_id: postId,
        tag_id: tag.id
      }));

      await knex('blog_post_tags').insert(tagRelations);
      console.log('üè∑Ô∏è Tags added:', tags.map(t => t.name).join(', '));
    }

  } catch (error) {
    console.error('‚ùå Failed to create sample blog post:', error.message);
    console.error('Stack trace:', error.stack);
  } finally {
    await knex.destroy();
  }
}

createSamplePost();
