services:
  # Redis Cache (local container)
  redis:
    image: redis:7-alpine
    container_name: cars-bids-redis
    restart: unless-stopped
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-testredis123}
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - cars-bids-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Backend API (connects to cloud database)
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: cars-bids-backend
    restart: unless-stopped
    environment:
      # Application Configuration
      NODE_ENV: ${NODE_ENV:-development}
      PORT: ${PORT:-5000}
      API_URL: ${API_URL:-http://localhost:5000}

      # Database Configuration
      DATABASE_URL: ${DATABASE_URL}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}

      # Redis Configuration
      REDIS_URL: ${REDIS_URL}

      # Security Configuration
      SESSION_SECRET: ${SESSION_SECRET}
      SECURE_COOKIES: ${SECURE_COOKIES:-false}

      # CORS Configuration
      CORS_ORIGIN: ${CORS_ORIGIN}
      CLIENT_URL: ${CLIENT_URL}
      FRONTEND_URL: ${FRONTEND_URL}

      # Stripe Configuration
      STRIPE_PUBLIC_KEY: ${STRIPE_PUBLIC_KEY}
      STRIPE_SECRET_KEY: ${STRIPE_SECRET_KEY}
      STRIPE_WEBHOOK_SECRET: ${STRIPE_WEBHOOK_SECRET}
      ENDPOINT_SECRET: ${ENDPOINT_SECRET}

      # External APIs
      IMGBB_API_KEY: ${IMGBB_API_KEY}
      X_RAPID_API_KEY: ${X_RAPID_API_KEY}
      X_RAPID_API_HOST: ${X_RAPID_API_HOST}
      OPENAI_API_KEY: ${OPENAI_API_KEY}

      # Email Configuration
      BREVO_API_KEY: ${BREVO_API_KEY}
      EMAIL_FROM_NAME: ${EMAIL_FROM_NAME:-Cars Bids}
      EMAIL_FROM: ${EMAIL_FROM}
      SUPPORT_EMAIL: ${SUPPORT_EMAIL}
      SUPPORT_URL: ${SUPPORT_URL}

      # Company Information
      BANK_NAME: ${BANK_NAME}
      BANK_ADDRESS: ${BANK_ADDRESS}
      BANK_ACCOUNT_NUMBER: ${BANK_ACCOUNT_NUMBER}
      BANK_IBAN: ${BANK_IBAN}
      BANK_SWIFT: ${BANK_SWIFT}
      ACCOUNT_HOLDER_NAME: ${ACCOUNT_HOLDER_NAME}
      OFFICE_ADDRESS: ${OFFICE_ADDRESS}
      WORKING_HOURS: ${WORKING_HOURS}
      PHONE_NUMBER: ${PHONE_NUMBER}
      PHONE_OPERATING_HOURS: ${PHONE_OPERATING_HOURS}
      SUPPORT_PHONE: ${SUPPORT_PHONE}
      SUPPORT_HOURS: ${SUPPORT_HOURS}

      # Admin Configuration
      ADMIN_EMAIL: ${ADMIN_EMAIL}
      ADMIN_DASHBOARD_URL: ${ADMIN_DASHBOARD_URL}

      # Subscription Scheduler
      SUBSCRIPTION_SCHEDULER_ENABLED: ${SUBSCRIPTION_SCHEDULER_ENABLED:-true}
      SUBSCRIPTION_FULL_SYNC_SCHEDULE: ${SUBSCRIPTION_FULL_SYNC_SCHEDULE:-"0 2 * * *"}
      SUBSCRIPTION_PLAN_MONITOR_SCHEDULE: ${SUBSCRIPTION_PLAN_MONITOR_SCHEDULE:-"*/30 * * * *"}
      SUBSCRIPTION_ACTIVE_SYNC_SCHEDULE: ${SUBSCRIPTION_ACTIVE_SYNC_SCHEDULE:-"*/15 * * * *"}

      # Timezone
      TZ: ${TZ:-UTC}
    depends_on:
      redis:
        condition: service_healthy
    networks:
      - cars-bids-network
    ports:
      - "5000:5000"
    volumes:
      - ./backend/uploads:/app/uploads
      - ./backend/ca.pem:/app/ca.pem:ro
    healthcheck:
      test: ["CMD", "node", "scripts/health-check.js"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Frontend (Vite/React)
  frontend:
    build:
      context: ./my-vite-app
      dockerfile: Dockerfile
    container_name: cars-bids-frontend
    restart: unless-stopped
    environment:
      VITE_API_ENDPOINT: ${VITE_API_ENDPOINT}
      VITE_STRIPE_PUBLIC_KEY: ${VITE_STRIPE_PUBLIC_KEY}
      VITE_STRIPE_SECRET_KEY: ${VITE_STRIPE_SECRET_KEY}
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - cars-bids-network
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
  nginx:
    image: nginx:latest
    container_name: cars-bids-nginx
    ports:
      - "80:80"
    depends_on:
      frontend:
        condition: service_healthy
    volumes:
      - ./my-vite-app/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./my-vite-app/dist:/usr/share/nginx/html:ro
    networks:
      - cars-bids-network

networks:
  cars-bids-network:
    driver: bridge

volumes:
  redis_data:
    driver: local
