services:
  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: cars-bids-redis
    restart: unless-stopped
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-redispassword}
    volumes:
      - redis_data:/data
    networks:
      - cars-bids-network
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: cars-bids-backend
    restart: unless-stopped
    environment:
      NODE_ENV: development
      PORT: 5000
      DATABASE_URL: ${DATABASE_URL}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      REDIS_URL: redis://:${REDIS_PASSWORD:-redispassword}@redis:6379
      SESSION_SECRET: ${SESSION_SECRET}
      CORS_ORIGIN: ${CORS_ORIGIN:-http://localhost}
      STRIPE_PUBLIC_KEY: ${STRIPE_PUBLIC_KEY}
      STRIPE_SECRET_KEY: ${STRIPE_SECRET_KEY}
      STRIPE_WEBHOOK_SECRET: ${STRIPE_WEBHOOK_SECRET}
      ENDPOINT_SECRET: ${ENDPOINT_SECRET}
      # Email Configuration
      BREVO_API_KEY: ${BREVO_API_KEY}
      EMAIL_FROM_NAME: ${EMAIL_FROM_NAME:-Cars Bids}
      EMAIL_FROM: ${EMAIL_FROM}
      SUPPORT_EMAIL: ${SUPPORT_EMAIL}
      SUPPORT_URL: ${SUPPORT_URL}
    depends_on:
      redis:
        condition: service_healthy
    networks:
      - cars-bids-network
    volumes:
      - ./backend/uploads:/app/uploads
    healthcheck:
      test: ["CMD", "node", "scripts/health-check.js"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Frontend
  frontend:
    build:
      context: ./my-vite-app
      dockerfile: Dockerfile
    container_name: cars-bids-frontend
    restart: unless-stopped
    environment:
      VITE_API_ENDPOINT: ${VITE_API_ENDPOINT}
      VITE_STRIPE_PUBLIC_KEY: ${VITE_STRIPE_PUBLIC_KEY}
      VITE_STRIPE_SECRET_KEY: ${VITE_STRIPE_SECRET_KEY}
    ports:
      - "80:80"
      - "${HTTPS_PORT:-443}:443"
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - cars-bids-network
    volumes:
      - ./ssl:/etc/nginx/ssl:ro
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 5

networks:
  cars-bids-network:
    driver: bridge

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
