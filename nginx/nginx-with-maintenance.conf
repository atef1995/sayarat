user  nginx;
worker_processes  auto;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;

events {
  worker_connections  1024;
}

http {
  include       /etc/nginx/mime.types;
  default_type  application/octet-stream;

  sendfile        on;
  keepalive_timeout  65;

  # Maintenance mode flag - create this file to enable maintenance mode
  # touch /var/www/maintenance_on to enable
  # rm /var/www/maintenance_on to disable
  set $maintenance_mode 0;
  
  # Check if maintenance file exists
  if (-f /var/www/maintenance_on) {
    set $maintenance_mode 1;
  }

  # Redirect HTTP to HTTPS
  server {
    listen 80;
    server_name sayarat.autos www.sayarat.autos;

    location /.well-known/acme-challenge/ {
      root /var/www/certbot;
    }

    location / {
      return 301 https://$host$request_uri;
    }
  }

  # HTTPS server
  server {
    listen 443 ssl;
    http2 on;
    server_name sayarat.autos www.sayarat.autos;

    ssl_certificate /etc/letsencrypt/live/sayarat.autos/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/sayarat.autos/privkey.pem;
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

    # Serve maintenance page if maintenance mode is on
    location @maintenance {
      root /var/www;
      try_files /maintenance.html =503;
    }

    # Check maintenance mode for all requests except admin IPs
    location / {
      # Allow admin access during maintenance (replace with your IP)
      # set $admin_ip 0;
      # if ($remote_addr = "YOUR_ADMIN_IP") {
      #   set $admin_ip 1;
      # }
      
      # Redirect to maintenance page if maintenance is on and not admin
      if ($maintenance_mode = 1) {
        return 503;
      }

      # Normal frontend proxy
      proxy_pass http://frontend:80;
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection 'upgrade';
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_cache_bypass $http_upgrade;
    }

    # API requests during maintenance
    location /api/ {
      # Allow API access during maintenance for admin operations
      if ($maintenance_mode = 1) {
        return 503;
      }

      proxy_pass http://backend:5000;
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection 'upgrade';
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_cache_bypass $http_upgrade;
    }

    # Proxy sitemap and SEO files to backend (allow during maintenance for SEO)
    location ~ ^/(sitemap.*\.xml|robots\.txt)$ {
      proxy_pass http://backend:5000;
      proxy_http_version 1.1;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_cache_bypass $http_upgrade;
      
      # Add specific headers for SEO files
      add_header Cache-Control "public, max-age=86400";
      add_header X-Content-Type-Options "nosniff";
    }

    # Custom error pages
    error_page 503 @maintenance;
    
    # Health check endpoint (bypass maintenance)
    location /health {
      proxy_pass http://backend:5000;
      proxy_http_version 1.1;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
    }
  }
}
